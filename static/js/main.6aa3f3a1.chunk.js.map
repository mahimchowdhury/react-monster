{"version":3,"sources":["components/card/card.components.jsx","components/card-list/cardlist.components.jsx","components/search-box/searchBox.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","demon","id","alt","name","email","CardList","map","SearchBox","Placeholder","Handeler","type","placeholder","onChange","App","heandelChange","e","setState","searchFeild","target","value","state","demons","fetch","then","response","json","users","this","filterdDemon","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,YAAO,SAAAC,GAAK,OACtB,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,MAAMC,GAAtC,0BAAkEC,IAAI,WAC7E,6BAAKL,EAAMG,MAAMG,OACjB,4BAAIN,EAAMG,MAAMI,aCHXC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAW,YAAhB,SAA6BD,EAAMG,MAAMM,KAAK,SAAAN,GAAK,OAAK,cAAC,EAAD,CAAuBA,MAAQA,GAAlBA,EAAMC,WCFzEM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,SAAf,OACrB,uBACIX,UAAU,SACVY,KAAK,SACLC,YAAaH,EACbI,SAAYH,MCyBLI,E,kDA1Bb,aAAc,IAAD,8BACX,gBAWHC,cAAgB,SAAAC,GACf,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAXlC,EAAKC,MAAO,CACVC,OAAQ,GACRJ,YAAY,IAJH,E,gEAOQ,IAAD,OAClBK,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACK,OAAOK,S,+BAKhC,IAAD,EACuBC,KAAKP,MAA3BC,EADD,EACCA,OAAQJ,EADT,EACSA,YACTW,EAAeP,EAAOQ,QAAO,SAAA7B,GAAK,OAAIA,EAAMG,KAAK2B,cAAcC,SAASd,EAAYa,kBAC1F,OAAQ,sBAAKhC,UAAU,MAAf,UACL,oBAAIA,UAAU,SAAd,6BACA,cAAC,EAAD,CAAWU,YAAY,iBAAiBC,SAAYkB,KAAKb,gBACzD,cAAC,EAAD,CAAUd,MAAS4B,W,GAtBPI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6aa3f3a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './box.style.css';\r\n\r\nexport const Card = props =>(\r\n   <div className ='card-container'>\r\n       <img src={`https://robohash.org/${props.demon.id}?set=set2&size=180x180`} alt=\"demons\"/>\r\n        <h2>{props.demon.name}</h2>\r\n        <p>{props.demon.email}</p>\r\n   </div> \r\n);","import React from 'react';\r\nimport {Card} from '../card/card.components';\r\nimport './card.style.css';\r\n\r\nexport const CardList = props => {\r\n    return <div className= 'card-list'>{props.demon.map( demon => (<Card key = {demon.id} demon ={demon}/>))}\r\n    </div>\r\n}","import React from 'react'\r\nimport './searchBox.styles.css';\r\n\r\nexport const SearchBox = ({Placeholder ,Handeler}) =>(\r\n    <input \r\n        className='search'\r\n        type='search' \r\n        placeholder={Placeholder}  \r\n        onChange = {Handeler}\r\n     />\r\n)","import React from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/cardlist.components';\nimport { SearchBox } from \"./components/search-box/searchBox.components\";\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state ={\n      demons :[],\n      searchFeild:''\n    }\n  }\n  componentDidMount (){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( response => response.json())\n    .then( users => this.setState({demons:users}));\n  }\n heandelChange = e => {\n  this.setState({searchFeild:e.target.value});\n }\n render(){\n   const {demons ,searchFeild} =this.state;\n   const filterdDemon = demons.filter(demon => demon.name.toLowerCase().includes(searchFeild.toLowerCase()));\n   return( <div className='App'>\n      <h1 className='header'>MONSTER ROLODEX</h1>\n      <SearchBox Placeholder='search monster' Handeler = {this.heandelChange} />\n      <CardList demon = {filterdDemon}/> \n    </div>\n   )\n } \n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}